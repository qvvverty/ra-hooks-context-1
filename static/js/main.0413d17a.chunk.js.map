{"version":3,"sources":["components/List/ListItem.jsx","components/lib/fetchData.js","components/List/List.jsx","components/Details.jsx","components/Loading.jsx","components/Users.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","className","onClick","userClickHandler","id","name","fetchData","url","setDataFunc","loaderStateFunc","a","fetch","response","ok","json","data","console","error","status","List","setLoading","useState","users","setUsers","useEffect","process","map","user","key","Details","selectedUserData","setUserData","selectedUserId","Object","keys","length","src","avatar","style","backgroundImage","alt","entries","details","detail","toUpperCase","slice","Loading","isLoading","Users","selectUser","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,SAASA,EAASC,GAK/B,OAAO,oBAAIC,UAAU,kBAAkBC,QAJvB,WACdF,EAAMG,iBAAiBH,EAAMI,KAGxB,SAAmDJ,EAAMK,O,2BCLnD,SAAeC,EAA9B,sC,4CAAe,WAAyBC,EAAKC,EAAaC,GAA3C,iBAAAC,EAAA,6DACbD,GAAgB,GADH,SAGUE,MAAMJ,GAHhB,YAGPK,EAHO,QAIAC,GAJA,0CAMUD,EAASE,OANnB,OAMHC,EANG,OAOTP,EAAYO,GAPH,kDASTC,QAAQC,MAAR,MATS,yBAWTR,GAAgB,GAXP,6CAcXO,QAAQC,MAAM,cAAeL,EAASM,QAd3B,iE,sBCIA,SAASC,EAAT,GAAyC,IAAzBC,EAAwB,EAAxBA,WAAepB,EAAS,gCAC3BqB,mBAAS,IADkB,mBAC9CC,EAD8C,KACvCC,EADuC,KAOrD,OAJAC,qBAAU,WACRlB,EAAUmB,iHAAkCF,EAAUH,KACrD,CAACA,IAGF,oBAAInB,UAAU,aAAd,SACGqB,EAAMI,KAAI,SAAAC,GAAI,OAAI,wBAAC5B,EAAD,2BAAc4B,GAAd,IAAoBxB,iBAAkBH,EAAMG,iBAAkByB,IAAKD,EAAKvB,WCVlF,SAASyB,EAAT,GAA4C,IAAzBT,EAAwB,EAAxBA,WAAepB,EAAS,gCAChBqB,mBAAS,IADO,mBACjDS,EADiD,KAC/BC,EAD+B,KAQxD,OALAP,qBAAU,WACHxB,EAAMgC,gBACX1B,EAAUmB,uGAAkCzB,EAAMgC,eAAiB,QAASD,EAAaX,KACxF,CAACpB,EAAMgC,eAAgBZ,IAErBa,OAAOC,KAAKJ,GAAkBK,OAGjC,qBAAIlC,UAAU,oBAAd,UACE,oBAAIA,UAAU,0BAAd,SACE,qBAEEA,UAAU,SACVmC,IAAKN,EAAiBO,OACtBC,MAAO,CAAEC,gBAAiB,+BAC1BC,IAAI,eAJCxC,EAAMgC,kBAOf,oBAAI/B,UAAU,SAAd,SAAwB6B,EAAiBzB,OACxC4B,OAAOQ,QAAQX,EAAiBY,SAAShB,KAAI,SAAAiB,GAC5C,OACE,qBAAI1C,UAAU,SAAd,UAEG0C,EAAO,GAAG,GAAGC,cAAgBD,EAAO,GAAGE,MAAM,GAFhD,KAEsDF,EAAO,KAFjCA,EAAO,UAhBO,KCXrC,SAASG,EAAT,GAAiC,IAAdC,EAAa,EAAbA,UAChC,OACE,qBAAK9C,UAAW8C,EAAY,mBAAqB,SAAjD,SACE,sBAAM9C,UAAU,aCEP,SAAS+C,IAAS,IAAD,EACO3B,mBAAS,IADhB,mBACvBW,EADuB,KACPiB,EADO,OAEE5B,oBAAS,GAFX,mBAEvB0B,EAFuB,KAEZ3B,EAFY,KAQ9B,OACE,qCACE,cAAC0B,EAAD,CAASC,UAAWA,IACpB,sBAAK9C,UAAU,kBAAf,UACE,cAACkB,EAAD,CAAMhB,iBARa,SAAAC,GACvB6C,EAAW7C,IAOmCgB,WAAYA,IACtD,cAACS,EAAD,CAASG,eAAgBA,EAAgBZ,WAAYA,UCP9C8B,MARf,WACE,OACE,mCACE,cAACF,EAAD,OCMSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0413d17a.chunk.js","sourcesContent":["export default function ListItem(props) {\n  const onClick = () => {\n    props.userClickHandler(props.id);\n  }\n\n  return <li className=\"users-list-item\" onClick={onClick}>{props.name}</li>\n}\n","export default async function fetchData(url, setDataFunc, loaderStateFunc) {\n  loaderStateFunc(true);\n\n  const response = await fetch(url);\n  if (response.ok) {\n    try {\n      const data = await response.json();\n      setDataFunc(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      loaderStateFunc(false);\n    }\n  } else {\n    console.error('HTTP error:', response.status);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport ListItem from './ListItem';\nimport fetchData from '../lib/fetchData';\n\nexport default function List({ setLoading, ...props }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchData(process.env.REACT_APP_USERS_LIST, setUsers, setLoading);\n  }, [setLoading]);\n\n  return (\n    <ul className=\"users-list\">\n      {users.map(user => <ListItem {...user} userClickHandler={props.userClickHandler} key={user.id} />)}\n    </ul>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport fetchData from './lib/fetchData';\n\nexport default function Details({ setLoading, ...props }) {\n  const [selectedUserData, setUserData] = useState({});\n\n  useEffect(() => {\n    if (!props.selectedUserId) return;\n    fetchData(process.env.REACT_APP_USER_DATA + props.selectedUserId + '.json', setUserData, setLoading);\n  }, [props.selectedUserId, setLoading]);\n\n  if (!Object.keys(selectedUserData).length) return null;\n\n  return (\n    <ul className=\"details-container\">\n      <li className=\"detail avatar-container\">\n        <img\n          key={props.selectedUserId}\n          className=\"avatar\"\n          src={selectedUserData.avatar}\n          style={{ backgroundImage: 'url(avatar_placeholder.png)' }}\n          alt=\"User avatar\"\n        />\n      </li>\n      <li className=\"detail\">{selectedUserData.name}</li>\n      {Object.entries(selectedUserData.details).map(detail => {\n        return (\n          <li className=\"detail\" key={detail[0]}>\n            {/* первая буква названия свойства - заглавная */}\n            {detail[0][0].toUpperCase() + detail[0].slice(1)}: {detail[1]}\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n","export default function Loading({ isLoading }) {\n  return (\n    <div className={isLoading ? \"loader-container\" : \"hidden\"}>\n      <span className=\"loader\" />\n    </div>\n  )\n}\n","import { useState } from 'react';\nimport List from './List/List';\nimport Details from './Details';\nimport Loading from './Loading';\n\nexport default function Users() {\n  const [selectedUserId, selectUser] = useState('');\n  const [isLoading, setLoading] = useState(true);\n\n  const userClickHandler = id => {\n    selectUser(id);\n  }\n\n  return (\n    <>\n      <Loading isLoading={isLoading} />\n      <div className=\"users-container\">\n        <List userClickHandler={userClickHandler} setLoading={setLoading} />\n        <Details selectedUserId={selectedUserId} setLoading={setLoading} />\n      </div>\n    </>\n  )\n}\n","import './App.css';\nimport Users from './components/Users';\n\nfunction App() {\n  return (\n    <>\n      <Users />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}